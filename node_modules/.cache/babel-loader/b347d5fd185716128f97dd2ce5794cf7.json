{"ast":null,"code":"var _jsxFileName = \"/home/sravya/Task/sample/src/App.js\";\nimport { Form, Input, Select, Modal, Table, Button, Tag } from 'antd';\nimport { EditOutlined, DeleteOutlined, SearchOutlined } from '@ant-design/icons';\nimport { Row, Col, DatePicker, Space } from 'antd';\nimport { useEffect, useState, useContext, createContext } from 'react';\nimport moment from 'moment';\nimport data from './records.json';\nimport ComponentA from './ComponentA';\nimport ComponentB from './ComponentB';\nimport Count from './Count';\nimport Display from './Display';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const store = /*#__PURE__*/createContext();\nexport const mall = /*#__PURE__*/createContext();\nconst {\n  TextArea\n} = Input;\n\nconst App = () => {\n  // const [storage, setStorage] = useState(data)\n  // const [storeName,setStoreName]=useState('')\n  // const [datavalue, setDataValue] = useState([\n  //   {\n  //     brandname:\"nokia\"\n  //   },\n  //   {\n  //     brandname:\"Mi\"\n  //   },\n  //   {\n  //     brandname:\"one+\" \n  //   },\n  // ])\n  const columns = [{\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name'\n  }, {\n    title: 'Age',\n    dataIndex: 'age',\n    key: 'age',\n    width: '12%'\n  }, {\n    title: 'Address',\n    dataIndex: 'address',\n    width: '30%',\n    key: 'address'\n  }];\n  const data = [{\n    key: 1,\n    name: 'John Brown sr.',\n    age: 60,\n    address: 'New York No. 1 Lake Park',\n    children: [{\n      key: 11,\n      name: 'John Brown',\n      age: 42,\n      address: 'New York No. 2 Lake Park'\n    }, {\n      key: 12,\n      name: 'John Brown jr.',\n      age: 30,\n      address: 'New York No. 3 Lake Park',\n      children: [{\n        key: 121,\n        name: 'Jimmy Brown',\n        age: 16,\n        address: 'New York No. 3 Lake Park'\n      }]\n    }, {\n      key: 13,\n      name: 'Jim Green sr.',\n      age: 72,\n      address: 'London No. 1 Lake Park',\n      children: [{\n        key: 131,\n        name: 'Jim Green',\n        age: 42,\n        address: 'London No. 2 Lake Park',\n        children: [{\n          key: 1311,\n          name: 'Jim Green jr.',\n          age: 25,\n          address: 'London No. 3 Lake Park'\n        }, {\n          key: 1312,\n          name: 'Jimmy Green sr.',\n          age: 18,\n          address: 'London No. 4 Lake Park'\n        }]\n      }]\n    }]\n  }, {\n    key: 2,\n    name: 'Joe Black',\n    age: 32,\n    address: 'Sidney No. 1 Lake Park'\n  }]; // rowSelection objects indicates the need for row selection\n\n  const rowSelection = {\n    onChange: (selectedRowKeys, selectedRows) => {\n      console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n    },\n    onSelect: (record, selected, selectedRows) => {\n      console.log(record, selected, selectedRows);\n    },\n    onSelectAll: (selected, selectedRows, changeRows) => {\n      console.log(selected, selectedRows, changeRows);\n    }\n  };\n\n  const getdata = () => {// for (let index = 0; index < data.length; index++) {\n    //   const element = data[index];\n    //   console.log(\"==ele=\",element)\n    //   for (let index = 0; index < element.batters.length; index++) {\n    //     const batter = element.batters[index];\n    //     console.log(\"batter\",batter)\n    //   }\n    // }\n  }; // const submitHandlerStore=(record,e)=>{\n  //   e.preventDefault();\n  //   console.log(\"recordinsubmit\",record)\n  //   console.log(\"e\",e)\n  //   setStorage([...storage,{name:storeName}])\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"cw solution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 6\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/sravya/Task/sample/src/App.js"],"names":["Form","Input","Select","Modal","Table","Button","Tag","EditOutlined","DeleteOutlined","SearchOutlined","Row","Col","DatePicker","Space","useEffect","useState","useContext","createContext","moment","data","ComponentA","ComponentB","Count","Display","store","mall","TextArea","App","columns","title","dataIndex","key","width","name","age","address","children","rowSelection","onChange","selectedRowKeys","selectedRows","console","log","onSelect","record","selected","onSelectAll","changeRows","getdata"],"mappings":"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","sourcesContent":["import { Form, Input,Select,Modal,Table,Button, Tag } from 'antd';\nimport{EditOutlined,DeleteOutlined,SearchOutlined }from '@ant-design/icons';\nimport { Row, Col,DatePicker, Space } from 'antd';\nimport { useEffect, useState,useContext, createContext} from 'react';\nimport moment from 'moment'\nimport data from './records.json'\nimport  ComponentA from './ComponentA';\nimport ComponentB from './ComponentB';\nimport Count from './Count';\nimport Display from './Display';\nimport './App.css';\nimport 'antd/dist/antd.css';\n\n\nexport const store =createContext();\nexport const mall=createContext();\n\nconst { TextArea } = Input;\n\n\nconst App=()=> {\n  // const [storage, setStorage] = useState(data)\n  // const [storeName,setStoreName]=useState('')\n  // const [datavalue, setDataValue] = useState([\n  //   {\n  //     brandname:\"nokia\"\n      \n  //   },\n  //   {\n  //     brandname:\"Mi\"\n      \n  //   },\n  //   {\n  //     brandname:\"one+\" \n      \n  //   },\n\n  // ])\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: 'Age',\n      dataIndex: 'age',\n      key: 'age',\n      width: '12%',\n    },\n    {\n      title: 'Address',\n      dataIndex: 'address',\n      width: '30%',\n      key: 'address',\n    },\n  ];\n  const data = [\n    {\n      key: 1,\n      name: 'John Brown sr.',\n      age: 60,\n      address: 'New York No. 1 Lake Park',\n      children: [\n        {\n          key: 11,\n          name: 'John Brown',\n          age: 42,\n          address: 'New York No. 2 Lake Park',\n        },\n        {\n          key: 12,\n          name: 'John Brown jr.',\n          age: 30,\n          address: 'New York No. 3 Lake Park',\n          children: [\n            {\n              key: 121,\n              name: 'Jimmy Brown',\n              age: 16,\n              address: 'New York No. 3 Lake Park',\n            },\n          ],\n        },\n        {\n          key: 13,\n          name: 'Jim Green sr.',\n          age: 72,\n          address: 'London No. 1 Lake Park',\n          children: [\n            {\n              key: 131,\n              name: 'Jim Green',\n              age: 42,\n              address: 'London No. 2 Lake Park',\n              children: [\n                {\n                  key: 1311,\n                  name: 'Jim Green jr.',\n                  age: 25,\n                  address: 'London No. 3 Lake Park',\n                },\n                {\n                  key: 1312,\n                  name: 'Jimmy Green sr.',\n                  age: 18,\n                  address: 'London No. 4 Lake Park',\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n    {\n      key: 2,\n      name: 'Joe Black',\n      age: 32,\n      address: 'Sidney No. 1 Lake Park',\n    },\n  ]; // rowSelection objects indicates the need for row selection\n  \n  const rowSelection = {\n    onChange: (selectedRowKeys, selectedRows) => {\n      console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n    },\n    onSelect: (record, selected, selectedRows) => {\n      console.log(record, selected, selectedRows);\n    },\n    onSelectAll: (selected, selectedRows, changeRows) => {\n      console.log(selected, selectedRows, changeRows);\n    },\n  };\n  \n\n \n\n  const getdata=()=>{\n \n\n    // for (let index = 0; index < data.length; index++) {\n    //   const element = data[index];\n    //   console.log(\"==ele=\",element)\n      //   for (let index = 0; index < element.batters.length; index++) {\n    //     const batter = element.batters[index];\n    //     console.log(\"batter\",batter)\n    //   }\n    // }\n    \n  }\n  // const submitHandlerStore=(record,e)=>{\n  //   e.preventDefault();\n  //   console.log(\"recordinsubmit\",record)\n  //   console.log(\"e\",e)\n  //   setStorage([...storage,{name:storeName}])\n  // }\n\n\n  return (\n     <div className=\"App\">  \n    <h1>cw solution</h1>\n    {/* <div>\n    <store.Provider value={[datavalue, setDataValue]}>\n      <center> */}\n        {/* <ComponentA/>\n        <ComponentB/> */}\n        {/* <Button onClick={()=>setDataValue(datavalue+1)}>increment</Button>  */}\n        {/* <Count/> \n        <Display/>\n      </center>\n   </store.Provider>\n    </div> */}\n<br/>\n    {/* <div>\n        <Button onClick={getdata}>add</Button>\n\n    </div> */}\n     {/* {console.log(\"=====\",data)}\n    {data && data.map(record=>{\n      {console.log(\"=====\",record)}\n         return(\n          <div key={record.id}> \n       \n             {<span>{record.type}</span>}<br/> \n          \n            <span>{record.name}</span><br/>\n            <span>{record.ppu}</span><br/> \n            <form className=\"form\" onSubmit={()=>submitHandlerStore(record)}>\n                 <input text=\"text\" onChange={(e)=>setStoreName(e.target.value)} placeholder=\"enter your brand\"></input>\n                 <input type=\"submit\" value=\"Add\"></input>\n           </form>\n            {console.log(\"====topping\",record.topping[0].type)}\n             \n            <br/>\n            {record.batters.batter && record.batters.batter.map(ele=>{\n              <span>{console.log(\"ele\",ele)}</span>\n              return(\n               <div style={{background:\"pink\"}}>\n                   <span>{ele.id}</span><br/>\n                   <span>{ele.type}</span>\n              </div> \n              )\n            })}  \n          \n             {record.topping && record.topping.map(text=>{\n            <span>{console.log(\"text===\",text)}</span>  \n              return(\n               <div key={text.id} style={{background:\"blue\"}} >  \n                 <span>{text.type}</span><br/>         \n                </div> \n              )\n            })} \n          </div>  */}\n         \n\n        {/* )\n    })\n    }  */}\n  </div> \n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}