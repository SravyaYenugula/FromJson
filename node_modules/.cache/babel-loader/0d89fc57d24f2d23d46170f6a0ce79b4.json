{"ast":null,"code":"var _jsxFileName = \"/home/sravya/Task/sample/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Form, Input, Select, Modal, Table, Button, Tag } from 'antd';\nimport { EditOutlined, DeleteOutlined, SearchOutlined } from '@ant-design/icons';\nimport { Row, Col, DatePicker, Space } from 'antd';\nimport { useEffect, useState, useContext, createContext } from 'react';\nimport moment from 'moment';\nimport data from './records.json';\nimport ComponentA from './ComponentA';\nimport ComponentB from './componentB';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const store = /*#__PURE__*/createContext();\nconst {\n  TextArea\n} = Input;\n\nconst App = () => {\n  _s();\n\n  const [data, setData] = useState(0); //  const [dataValue,setDataValue]= useContext()\n\n  const getdata = () => {\n    console.log(data);\n\n    for (let index = 0; index < data.length; index++) {\n      const element = data[index];\n      console.log(\"==ele=\", element);\n\n      for (let index = 0; index < element.batters.length; index++) {\n        const batter = element.batters[index];\n        console.log(\"batter\", batter);\n      }\n    } // console.log(\"79797\",dataValue)\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"cw solution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(store.Provider, {\n        value: [data, setData],\n        children: /*#__PURE__*/_jsxDEV(\"center\", {\n          children: [/*#__PURE__*/_jsxDEV(\"componentA\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"componentB\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: getdata,\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), console.log(\"=====\", data), data && data.map(record => {\n      {\n        /* {console.log(\"=====\",record)} */\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: record.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: record.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 39\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: record.ppu\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 38\n        }, this), console.log(\"====topping\", record.topping[0].type), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), record.batters.batter && record.batters.batter.map(ele => {\n          /*#__PURE__*/\n          _jsxDEV(\"span\", {\n            children: console.log(\"ele\", ele)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this);\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: \"pink\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: ele.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: ele.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 16\n          }, this);\n        }), record.topping && record.topping.map(text => {\n          /*#__PURE__*/\n          _jsxDEV(\"span\", {\n            children: console.log(\"text===\", text)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this);\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: \"blue\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: text.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 42\n            }, this)]\n          }, text.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 16\n          }, this);\n        })]\n      }, record.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"R+nRXVpNFOACdSESPyj6qitauFI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/sravya/Task/sample/src/App.js"],"names":["Form","Input","Select","Modal","Table","Button","Tag","EditOutlined","DeleteOutlined","SearchOutlined","Row","Col","DatePicker","Space","useEffect","useState","useContext","createContext","moment","data","ComponentA","ComponentB","store","TextArea","App","setData","getdata","console","log","index","length","element","batters","batter","map","record","type","name","ppu","topping","ele","background","id","text"],"mappings":"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","sourcesContent":["import { Form, Input,Select,Modal,Table,Button, Tag } from 'antd';\nimport{EditOutlined,DeleteOutlined,SearchOutlined }from '@ant-design/icons';\nimport { Row, Col,DatePicker, Space } from 'antd';\nimport { useEffect, useState,useContext, createContext} from 'react';\nimport moment from 'moment'\nimport data from './records.json'\nimport ComponentA from './ComponentA';\nimport ComponentB from './componentB';\nimport './App.css';\nimport 'antd/dist/antd.css';\n\n\nexport const store =createContext();\n\nconst { TextArea } = Input;\n\n\nconst App=()=> {\n  const [data, setData] = useState(0)\n\n  //  const [dataValue,setDataValue]= useContext()\n\n  const getdata=()=>{\n    console.log(data) \n\n    for (let index = 0; index < data.length; index++) {\n      const element = data[index];\n      console.log(\"==ele=\",element)\n      for (let index = 0; index < element.batters.length; index++) {\n        const batter = element.batters[index];\n        console.log(\"batter\",batter)\n      }\n    }\n    // console.log(\"79797\",dataValue)\n\n  }\n\n\n  return (\n    <div className=\"App\">  \n    <h1>cw solution</h1>\n    <div>\n    <store.Provider value={[data,setData]}>\n      <center>\n        <componentA/>\n        <componentB/>\n      </center>\n   </store.Provider>\n    </div>\n\n    <div>\n        <Button onClick={getdata}>add</Button>\n\n    </div>\n    {console.log(\"=====\",data)}\n    {data && data.map(record=>{\n      {/* {console.log(\"=====\",record)} */}\n        return(\n          <div key={record.id}>\n          {/* <Row gutter={16}>\n          <Col className=\"gutter-row\" span={6}>\n          <Form.Item name=\"bUnitname\" label=\"Business Unit*\"> */}\n             <span>{record.type}</span><br/>\n          {/* </Form.Item>\n          </Col>\n          </Row> */}\n            <span>{record.name}</span><br/>\n            <span>{record.ppu}</span><br/>\n            {console.log(\"====topping\",record.topping[0].type)}\n             \n            <br/>\n            {record.batters.batter && record.batters.batter.map(ele=>{\n              <span>{console.log(\"ele\",ele)}</span>\n              return(\n               <div style={{background:\"pink\"}}>\n                   <span>{ele.id}</span><br/>\n                   <span>{ele.type}</span>\n              </div> \n              )\n            })}  \n          \n             {record.topping && record.topping.map(text=>{\n            <span>{console.log(\"text===\",text)}</span>  \n              return(\n               <div key={text.id} style={{background:\"blue\"}} >  \n                 <span>{text.type}</span><br/>         \n                </div> \n              )\n            })} \n          </div> \n         \n\n        )\n    })\n    }\n  </div>\n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}