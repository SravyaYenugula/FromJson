{"ast":null,"code":"var _jsxFileName = \"/home/sravya/Task/sample/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Form, Input, Select, Modal, Table, Button, Tag } from 'antd';\nimport { EditOutlined, DeleteOutlined, SearchOutlined } from '@ant-design/icons';\nimport { Row, Col, DatePicker, Space } from 'antd';\nimport { useEffect, useState, useContext, createContext } from 'react';\nimport moment from 'moment';\nimport data from './records.json';\nimport ComponentA from './ComponentA';\nimport ComponentB from './ComponentB';\nimport Count from './Count';\nimport Display from './Display';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const store = /*#__PURE__*/createContext();\nexport const mall = /*#__PURE__*/createContext();\nconst {\n  TextArea\n} = Input;\n\nconst App = () => {\n  _s();\n\n  const [storage, setStorage] = useState(data);\n  const [storeName, setStoreName] = useState('');\n  const [datavalue, setDataValue] = useState([{\n    brandname: \"nokia\"\n  }, {\n    brandname: \"Mi\"\n  }, {\n    brandname: \"one+\"\n  }]);\n\n  const getdata = () => {// for (let index = 0; index < data.length; index++) {\n    //   const element = data[index];\n    //   console.log(\"==ele=\",element)\n    //   for (let index = 0; index < element.batters.length; index++) {\n    //     const batter = element.batters[index];\n    //     console.log(\"batter\",batter)\n    //   }\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"cw solution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(store.Provider, {\n        value: [datavalue, setDataValue],\n        children: /*#__PURE__*/_jsxDEV(\"center\", {\n          children: [/*#__PURE__*/_jsxDEV(Count, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Display, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 1\n    }, this), console.log(\"=====\", data), data && data.map(record => {\n      {\n        console.log(\"=====\", record);\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: record.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: record.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 39\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: record.ppu\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 38\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form\",\n          onSubmit: submitHandlerStore,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            text: \"text\",\n            onChange: e => setStoreName(e.target.value),\n            placeholder: \"enter your brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), console.log(\"====topping\", record.topping[0].type), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), record.batters.batter && record.batters.batter.map(ele => {\n          /*#__PURE__*/\n          _jsxDEV(\"span\", {\n            children: console.log(\"ele\", ele)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this);\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: \"pink\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: ele.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: ele.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 16\n          }, this);\n        }), record.topping && record.topping.map(text => {\n          /*#__PURE__*/\n          _jsxDEV(\"span\", {\n            children: console.log(\"text===\", text)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this);\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: \"blue\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: text.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 42\n            }, this)]\n          }, text.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 16\n          }, this);\n        })]\n      }, record.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 6\n  }, this);\n};\n\n_s(App, \"WtrEjlYJ9IiCm7xHplPaaIs1yuQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/sravya/Task/sample/src/App.js"],"names":["Form","Input","Select","Modal","Table","Button","Tag","EditOutlined","DeleteOutlined","SearchOutlined","Row","Col","DatePicker","Space","useEffect","useState","useContext","createContext","moment","data","ComponentA","ComponentB","Count","Display","store","mall","TextArea","App","storage","setStorage","storeName","setStoreName","datavalue","setDataValue","brandname","getdata","console","log","map","record","type","name","ppu","submitHandlerStore","e","target","value","topping","batters","batter","ele","background","id","text"],"mappings":"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","sourcesContent":["import { Form, Input,Select,Modal,Table,Button, Tag } from 'antd';\nimport{EditOutlined,DeleteOutlined,SearchOutlined }from '@ant-design/icons';\nimport { Row, Col,DatePicker, Space } from 'antd';\nimport { useEffect, useState,useContext, createContext} from 'react';\nimport moment from 'moment'\nimport data from './records.json'\nimport  ComponentA from './ComponentA';\nimport ComponentB from './ComponentB';\nimport Count from './Count';\nimport Display from './Display';\nimport './App.css';\nimport 'antd/dist/antd.css';\n\n\nexport const store =createContext();\nexport const mall=createContext();\n\nconst { TextArea } = Input;\n\n\nconst App=()=> {\n  const [storage, setStorage] = useState(data)\n  const [storeName,setStoreName]=useState('')\n  const [datavalue, setDataValue] = useState([\n    {\n      brandname:\"nokia\"\n      \n    },\n    {\n      brandname:\"Mi\"\n      \n    },\n    {\n      brandname:\"one+\" \n      \n    },\n\n  ])\n\n \n\n  const getdata=()=>{\n \n\n    // for (let index = 0; index < data.length; index++) {\n    //   const element = data[index];\n    //   console.log(\"==ele=\",element)\n    //   for (let index = 0; index < element.batters.length; index++) {\n    //     const batter = element.batters[index];\n    //     console.log(\"batter\",batter)\n    //   }\n    // }\n    \n  }\n\n\n  return (\n     <div className=\"App\">  \n    <h1>cw solution</h1>\n    <div>\n    <store.Provider value={[datavalue, setDataValue]}>\n      <center>\n        {/* <ComponentA/>\n        <ComponentB/> */}\n        {/* <Button onClick={()=>setDataValue(datavalue+1)}>increment</Button>  */}\n        <Count/> \n        <Display/>\n      </center>\n   </store.Provider>\n    </div>\n<br/>\n    {/* <div>\n        <Button onClick={getdata}>add</Button>\n\n    </div> */}\n     {console.log(\"=====\",data)}\n    {data && data.map(record=>{\n      {console.log(\"=====\",record)}\n         return(\n          <div key={record.id}> \n          {/* <Row gutter={16}>\n          <Col className=\"gutter-row\" span={6}>\n          <Form.Item name=\"bUnitname\" label=\"Business Unit*\">  */}\n             {<span>{record.type}</span>}<br/> \n           {/* </Form.Item>\n          </Col> */}\n          {/* </Row> */}\n            <span>{record.name}</span><br/>\n            <span>{record.ppu}</span><br/> \n            <form className=\"form\" onSubmit={submitHandlerStore}>\n                 <input text=\"text\" onChange={(e)=>setStoreName(e.target.value)} placeholder=\"enter your brand\"></input>\n                 <input type=\"submit\" value=\"Add\"></input>\n           </form>\n            {console.log(\"====topping\",record.topping[0].type)}\n             \n            <br/>\n            {record.batters.batter && record.batters.batter.map(ele=>{\n              <span>{console.log(\"ele\",ele)}</span>\n              return(\n               <div style={{background:\"pink\"}}>\n                   <span>{ele.id}</span><br/>\n                   <span>{ele.type}</span>\n              </div> \n              )\n            })}  \n          \n             {record.topping && record.topping.map(text=>{\n            <span>{console.log(\"text===\",text)}</span>  \n              return(\n               <div key={text.id} style={{background:\"blue\"}} >  \n                 <span>{text.type}</span><br/>         \n                </div> \n              )\n            })} \n          </div> \n         \n\n        )\n    })\n    } \n  </div> \n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}