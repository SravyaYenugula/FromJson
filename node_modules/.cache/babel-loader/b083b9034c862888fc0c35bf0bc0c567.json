{"ast":null,"code":"var _jsxFileName = \"/home/sravya/Task/sample/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Form, Input, Select, Modal, Table, Button, Tag } from 'antd';\nimport { EditOutlined, DeleteOutlined, SearchOutlined } from '@ant-design/icons';\nimport { Row, Col, DatePicker, Space } from 'antd';\nimport { useEffect, useState, useContext, createContext } from 'react';\nimport moment from 'moment';\nimport data from './records.json';\nimport ComponentA from './ComponentA';\nimport ComponentB from './ComponentB';\nimport Count from './Count';\nimport Display from './Display';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const store = /*#__PURE__*/createContext();\nconst {\n  TextArea\n} = Input;\n\nconst App = () => {\n  _s();\n\n  const [datavalue, setDataValue] = useState([{\n    brandname: \"nokia\"\n  }, {\n    brandname: \"Mi\"\n  }, {\n    brandname: \"one+\"\n  }]);\n\n  const getdata = () => {// for (let index = 0; index < data.length; index++) {\n    //   const element = data[index];\n    //   console.log(\"==ele=\",element)\n    //   for (let index = 0; index < element.batters.length; index++) {\n    //     const batter = element.batters[index];\n    //     console.log(\"batter\",batter)\n    //   }\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"cw solution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(store.Provider, {\n        value: [datavalue, setDataValue],\n        children: /*#__PURE__*/_jsxDEV(\"center\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setDataValue(datavalue + 1),\n            children: \"increment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Count, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Display, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 6\n  }, this);\n};\n\n_s(App, \"ssaQDiAzVDgdZUi+oyG3Er5NpJI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/sravya/Task/sample/src/App.js"],"names":["Form","Input","Select","Modal","Table","Button","Tag","EditOutlined","DeleteOutlined","SearchOutlined","Row","Col","DatePicker","Space","useEffect","useState","useContext","createContext","moment","data","ComponentA","ComponentB","Count","Display","store","TextArea","App","datavalue","setDataValue","brandname","getdata"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,KAAf,EAAqBC,MAArB,EAA4BC,KAA5B,EAAkCC,KAAlC,EAAwCC,MAAxC,EAAgDC,GAAhD,QAA2D,MAA3D;AACA,SAAOC,YAAP,EAAoBC,cAApB,EAAmCC,cAAnC,QAAwD,mBAAxD;AACA,SAASC,GAAT,EAAcC,GAAd,EAAkBC,UAAlB,EAA8BC,KAA9B,QAA2C,MAA3C;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA6BC,UAA7B,EAAyCC,aAAzC,QAA6D,OAA7D;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAQC,UAAR,MAAwB,cAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,WAAP;AACA,OAAO,oBAAP;;AAGA,OAAO,MAAMC,KAAK,gBAAEP,aAAa,EAA1B;AAEP,MAAM;AAAEQ,EAAAA;AAAF,IAAexB,KAArB;;AAGA,MAAMyB,GAAG,GAAC,MAAK;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,CACzC;AACEc,IAAAA,SAAS,EAAC;AADZ,GADyC,EAKzC;AACEA,IAAAA,SAAS,EAAC;AADZ,GALyC,EASzC;AACEA,IAAAA,SAAS,EAAC;AADZ,GATyC,CAAD,CAA1C;;AAiBA,QAAMC,OAAO,GAAC,MAAI,CAGhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAED,GAZD;;AAeA,sBACG;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADC,eAED;AAAA,6BACA,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,KAAK,EAAE,CAACH,SAAD,EAAYC,YAAZ,CAAvB;AAAA,+BACE;AAAA,kCAGE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,MAAIA,YAAY,CAACD,SAAS,GAAC,CAAX,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFC;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AA8DD,CA/FD;;GAAMD,G;;KAAAA,G;AAiGN,eAAeA,GAAf","sourcesContent":["import { Form, Input,Select,Modal,Table,Button, Tag } from 'antd';\nimport{EditOutlined,DeleteOutlined,SearchOutlined }from '@ant-design/icons';\nimport { Row, Col,DatePicker, Space } from 'antd';\nimport { useEffect, useState,useContext, createContext} from 'react';\nimport moment from 'moment'\nimport data from './records.json'\nimport  ComponentA from './ComponentA';\nimport ComponentB from './ComponentB';\nimport Count from './Count';\nimport Display from './Display';\nimport './App.css';\nimport 'antd/dist/antd.css';\n\n\nexport const store =createContext();\n\nconst { TextArea } = Input;\n\n\nconst App=()=> {\n  const [datavalue, setDataValue] = useState([\n    {\n      brandname:\"nokia\"\n      \n    },\n    {\n      brandname:\"Mi\"\n      \n    },\n    {\n      brandname:\"one+\" \n      \n    },\n  ])\n\n \n\n  const getdata=()=>{\n \n\n    // for (let index = 0; index < data.length; index++) {\n    //   const element = data[index];\n    //   console.log(\"==ele=\",element)\n    //   for (let index = 0; index < element.batters.length; index++) {\n    //     const batter = element.batters[index];\n    //     console.log(\"batter\",batter)\n    //   }\n    // }\n    \n  }\n\n\n  return (\n     <div className=\"App\">  \n    <h1>cw solution</h1>\n    <div>\n    <store.Provider value={[datavalue, setDataValue]}>\n      <center>\n        {/* <ComponentA/>\n        <ComponentB/> */}\n        <Button onClick={()=>setDataValue(datavalue+1)}>increment</Button> \n        <Count/> \n        <Display/>\n      </center>\n   </store.Provider>\n    </div>\n\n    {/* <div>\n        <Button onClick={getdata}>add</Button>\n\n    </div> */}\n    {/* {console.log(\"=====\",data)}\n    {data && data.map(record=>{\n      {/* {console.log(\"=====\",record)} */}\n        {/* return(\n          <div key={record.id}> */}\n          {/* <Row gutter={16}>\n          <Col className=\"gutter-row\" span={6}>\n          <Form.Item name=\"bUnitname\" label=\"Business Unit*\"> */}\n             {/* <span>{record.type}</span><br/> */}\n          {/* </Form.Item>\n          </Col>\n          </Row> */}\n            {/* <span>{record.name}</span><br/>\n            <span>{record.ppu}</span><br/>\n            {console.log(\"====topping\",record.topping[0].type)}\n             \n            <br/>\n            {record.batters.batter && record.batters.batter.map(ele=>{\n              <span>{console.log(\"ele\",ele)}</span>\n              return(\n               <div style={{background:\"pink\"}}>\n                   <span>{ele.id}</span><br/>\n                   <span>{ele.type}</span>\n              </div> \n              )\n            })}  \n          \n             {record.topping && record.topping.map(text=>{\n            <span>{console.log(\"text===\",text)}</span>  \n              return(\n               <div key={text.id} style={{background:\"blue\"}} >  \n                 <span>{text.type}</span><br/>         \n                </div> \n              )\n            })} \n          </div> \n         \n\n        )\n    })\n    }  */}\n  </div> \n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}