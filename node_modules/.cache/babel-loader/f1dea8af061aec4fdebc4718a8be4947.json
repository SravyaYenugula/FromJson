{"ast":null,"code":"var _jsxFileName = \"/home/sravya/sample2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Form, Input, Select, Modal, Button, Tag } from 'antd';\nimport { EditOutlined, DeleteOutlined, SearchOutlined } from '@ant-design/icons';\nimport { Row, Col, DatePicker } from 'antd';\nimport { useEffect, useContext, createContext } from 'react';\nimport moment from 'moment';\nimport data from './records.json';\nimport ComponentA from './ComponentA';\nimport ComponentB from './ComponentB';\nimport Count from './Count';\nimport Display from './Display';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport { Space, Switch, Table } from 'antd';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const store = /*#__PURE__*/createContext();\nexport const mall = /*#__PURE__*/createContext();\nconst {\n  TextArea\n} = Input;\n\nconst App = () => {\n  _s();\n\n  const [dataInSource, setDataInSource] = useState(); //  const [newAddress,setNewAddress]=useState()\n\n  const [dataSource, setDataSource] = useState([{\n    id: 1,\n    age: 20,\n    address: 'Hydrabad'\n  }, {\n    id: 2,\n    age: 23,\n    address: 'goa'\n  }]); // const [storage, setStorage] = useState(data)\n  // const [storeName,setStoreName]=useState('')\n  // const [datavalue, setDataValue] = useState([\n  //   {\n  //     brandname:\"nokia\"\n  //   },\n  //   {\n  //     brandname:\"Mi\"\n  //   },\n  //   {\n  //     brandname:\"one+\" \n  //   },z\n  // ])  \n  // for (let index = 0; index < data.length; index++) {\n  //   const element = data[index].key=index;\n  //   //setDataInSource(element)\n  //   //  for (let index = 0; index < arr.length; index++) {\n  //   //                 arr[index].key = index;\n  //   //             };\n  // } \n\n  const [checkStrictly, setCheckStrictly] = useState(false);\n  const columns = [{\n    title: 'Id',\n    dataIndex: 'id',\n    key: 'id'\n  }, {\n    title: 'Age',\n    dataIndex: 'age',\n    key: 'age' // width: '12%',\n\n  }, {\n    title: 'Address',\n    dataIndex: 'address',\n    // width: '30%',\n    key: 'address'\n  }, {\n    title: 'Action',\n    // dataIndex: '',\n    // width: '30%',\n    key: 'Action'\n  }];\n  const datas = [{\n    key: 1,\n    name: 'John Brown sr.',\n    age: 60,\n    address: 'New York No. 1 Lake Park',\n    children: [{\n      key: 11,\n      name: 'John Brown',\n      age: 42,\n      address: 'New York No. 2 Lake Park'\n    }, {\n      key: 12,\n      name: 'John Brown jr.',\n      age: 30,\n      address: 'New York No. 3 Lake Park',\n      children: [{\n        key: 121,\n        name: 'Jimmy Brown',\n        age: 16,\n        address: 'New York No. 3 Lake Park'\n      }]\n    }, {\n      key: 13,\n      name: 'Jim Green sr.',\n      age: 72,\n      address: 'London No. 1 Lake Park',\n      children: [{\n        key: 131,\n        name: 'Jim Green',\n        age: 42,\n        address: 'London No. 2 Lake Park',\n        children: [{\n          key: 1311,\n          name: 'Jim Green jr.',\n          age: 25,\n          address: 'London No. 3 Lake Park'\n        }, {\n          key: 1312,\n          name: 'Jimmy Green sr.',\n          age: 18,\n          address: 'London No. 4 Lake Park'\n        }]\n      }]\n    }]\n  }, {\n    key: 2,\n    name: 'Joe Black',\n    age: 32,\n    address: 'Sidney No. 1 Lake Park'\n  }];\n  const rowSelection = {\n    onChange: (selectedRowKeys, selectedRows) => {\n      console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n    },\n    onSelect: (record, selected, selectedRows) => {\n      console.log(record, selected, selectedRows);\n    },\n    onSelectAll: (selected, selectedRows, changeRows) => {\n      console.log(selected, selectedRows, changeRows);\n    }\n  };\n\n  const getdata = () => {// for (let index = 0; index < data.length; index++) {\n    //   const element = data[index];\n    //   console.log(\"==ele=\",element)\n    //   for (let index = 0; index < element.batters.length; index++) {\n    //     const batter = element.batters[index];\n    //     console.log(\"batter\",batter)\n    //   }\n    // }\n  }; // const submitHandlerStore=(record,e)=>{\n  //   e.preventDefault();\n  //   console.log(\"recordinsubmit\",record)\n  //   console.log(\"e\",e)\n  //   setStorage([...storage,{name:storeName}])\n  // }\n\n\n  const addAddress = () => {\n    const randomNumber = parseInt(Math.random() * 1000);\n    const newAddress = {\n      id: randomNumber,\n      age: randomNumber,\n      address: 'Address' + randomNumber\n    };\n    setDataSource(pre => {\n      return [...pre, newAddress];\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"cw solution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: addAddress,\n        children: \"Add a Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns // rowSelection={{ ...rowSelection, checkStrictly }}\n        ,\n        dataSource: dataSource\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 6\n  }, this);\n};\n\n_s(App, \"AwKMOVbH6yMsp4GjUO+PTbUSs1k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/sravya/sample2/src/App.js"],"names":["Form","Input","Select","Modal","Button","Tag","EditOutlined","DeleteOutlined","SearchOutlined","Row","Col","DatePicker","useEffect","useContext","createContext","moment","data","ComponentA","ComponentB","Count","Display","Space","Switch","Table","React","useState","store","mall","TextArea","App","dataInSource","setDataInSource","dataSource","setDataSource","id","age","address","checkStrictly","setCheckStrictly","columns","title","dataIndex","key","datas","name","children","rowSelection","onChange","selectedRowKeys","selectedRows","console","log","onSelect","record","selected","onSelectAll","changeRows","getdata","addAddress","randomNumber","parseInt","Math","random","newAddress","pre"],"mappings":"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","sourcesContent":["import { Form, Input,Select,Modal,Button, Tag } from 'antd';\nimport{EditOutlined,DeleteOutlined,SearchOutlined }from '@ant-design/icons';\nimport { Row, Col,DatePicker } from 'antd';\nimport { useEffect, useContext, createContext} from 'react';\nimport moment from 'moment'\nimport data from './records.json'\nimport  ComponentA from './ComponentA';\nimport ComponentB from './ComponentB';\nimport Count from './Count';\nimport Display from './Display';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport { Space, Switch, Table } from 'antd';\nimport React, { useState } from 'react';\n\n\nexport const store =createContext();\nexport const mall=createContext();\n\nconst { TextArea } = Input;\n\n\nconst App=()=> {  \n     const [dataInSource,setDataInSource]=useState()\n    //  const [newAddress,setNewAddress]=useState()\n     const [dataSource,setDataSource]=useState(\n       [\n         {\n         id:1,\n         age:20,\n         address:'Hydrabad'\n         \n       },\n       {\n        id:2,\n        age:23,\n        address:'goa'\n        \n      }\n      ]\n     )\n  // const [storage, setStorage] = useState(data)\n  // const [storeName,setStoreName]=useState('')\n  // const [datavalue, setDataValue] = useState([\n  //   {\n  //     brandname:\"nokia\"\n      \n  //   },\n  //   {\n  //     brandname:\"Mi\"\n      \n  //   },\n  //   {\n  //     brandname:\"one+\" \n      \n  //   },z\n\n  // ])  \n  // for (let index = 0; index < data.length; index++) {\n  //   const element = data[index].key=index;\n  //   //setDataInSource(element)\n  //   //  for (let index = 0; index < arr.length; index++) {\n  //   //                 arr[index].key = index;\n  //   //             };\n  // } \n \n  const [checkStrictly, setCheckStrictly] = useState(false);\n  const columns = [\n    {\n      title: 'Id',\n      dataIndex: 'id',\n      key: 'id',\n    },\n    {\n      title: 'Age',\n      dataIndex: 'age',\n      key: 'age',\n      // width: '12%',\n    },\n    {\n      title: 'Address',\n      dataIndex: 'address',\n      // width: '30%',\n      key: 'address',\n    },\n    {\n      title: 'Action',\n      // dataIndex: '',\n      // width: '30%',\n      key: 'Action',\n    },\n\n  ];\n  const datas = [\n    {\n      key: 1,\n      name: 'John Brown sr.',\n      age: 60,\n      address: 'New York No. 1 Lake Park',\n      children: [\n        {\n          key: 11,\n          name: 'John Brown',\n          age: 42,\n          address: 'New York No. 2 Lake Park',\n        },\n        {\n          key: 12,\n          name: 'John Brown jr.',\n          age: 30,\n          address: 'New York No. 3 Lake Park',\n          children: [\n            {\n              key: 121,\n              name: 'Jimmy Brown',\n              age: 16,\n              address: 'New York No. 3 Lake Park',\n            },\n          ],\n        },\n        {\n          key: 13,\n          name: 'Jim Green sr.',\n          age: 72,\n          address: 'London No. 1 Lake Park',\n          children: [\n            {\n              key: 131,\n              name: 'Jim Green',\n              age: 42,\n              address: 'London No. 2 Lake Park',\n              children: [\n                {\n                  key: 1311,\n                  name: 'Jim Green jr.',\n                  age: 25,\n                  address: 'London No. 3 Lake Park',\n                },\n                {\n                  key: 1312,\n                  name: 'Jimmy Green sr.',\n                  age: 18,\n                  address: 'London No. 4 Lake Park',\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n    {\n      key: 2,\n      name: 'Joe Black',\n      age: 32,\n      address: 'Sidney No. 1 Lake Park',\n    },\n  ]\n  const rowSelection = {\n    onChange: (selectedRowKeys, selectedRows) => {\n      console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n    },\n    onSelect: (record, selected, selectedRows) => {\n      console.log(record, selected, selectedRows);\n    },\n    onSelectAll: (selected, selectedRows, changeRows) => {\n      console.log(selected, selectedRows, changeRows);\n    },\n  };\n\n\n \n \n\n  const getdata=()=>{\n \n\n    // for (let index = 0; index < data.length; index++) {\n    //   const element = data[index];\n    //   console.log(\"==ele=\",element)\n      //   for (let index = 0; index < element.batters.length; index++) {\n    //     const batter = element.batters[index];\n    //     console.log(\"batter\",batter)\n    //   }\n    // }\n    \n  }\n  // const submitHandlerStore=(record,e)=>{\n  //   e.preventDefault();\n  //   console.log(\"recordinsubmit\",record)\n  //   console.log(\"e\",e)\n  //   setStorage([...storage,{name:storeName}])\n  // }\n   const addAddress=()=>{\n     const randomNumber=parseInt(Math.random()*1000)\n     const newAddress={\n      id:randomNumber,\n      age:randomNumber,\n      address:'Address'+randomNumber\n      \n    };\n     setDataSource(pre=>{\n       return[...pre,newAddress]\n     })\n   };\n\n  return (\n     <div className=\"App\">  \n    <h1>cw solution</h1>\n    {/* <h1>hello</h1> */}\n   {/* {console.log(\"data\",data)} */}\n    {/* <div>\n    <store.Provider value={[datavalue, setDataValue]}>\n      <center> */}\n        {/* <ComponentA/>\n        <ComponentB/> */}\n        {/* <Button onClick={()=>setDataValue(datavalue+1)}>increment</Button>  */}\n        {/* <Count/> \n        <Display/>\n      </center>\n   </store.Provider>\n    </div> */}\n<br/>\n    {/* <div>\n        <Button onClick={getdata}>add</Button>\n\n    </div> */}\n     {/* {console.log(\"=====\",data)}\n    {data && data.map(record=>{\n      {console.log(\"=====\",record)}\n         return(\n          <div key={record.id}> \n       \n             {<span>{record.type}</span>}<br/> \n          \n            <span>{record.name}</span><br/>\n            <span>{record.ppu}</span><br/> \n            <form className=\"form\" onSubmit={()=>submitHandlerStore(record)}>\n                 <input text=\"text\" onChange={(e)=>setStoreName(e.target.value)} placeholder=\"enter your brand\"></input>\n                 <input type=\"submit\" value=\"Add\"></input>\n           </form>\n            {console.log(\"====topping\",record.topping[0].type)}\n             \n            <br/>\n            {record.batters.batter && record.batters.batter.map(ele=>{\n              <span>{console.log(\"ele\",ele)}</span>\n              return(\n               <div style={{background:\"pink\"}}>\n                   <span>{ele.id}</span><br/>\n                   <span>{ele.type}</span>\n              </div> \n              )\n            })}  \n          \n             {record.topping && record.topping.map(text=>{\n            <span>{console.log(\"text===\",text)}</span>  \n              return(\n               <div key={text.id} style={{background:\"blue\"}} >  \n                 <span>{text.type}</span><br/>         \n                </div> \n              )\n            })} \n          </div>  */}\n         \n\n        {/* )\n    })\n    }  */}\n    <>\n      {/* <Space\n        align=\"center\"\n        style={{\n          marginBottom: 16,\n        }}\n      >\n        CheckStrictly: <Switch checked={checkStrictly} onChange={setCheckStrictly} />\n      </Space> */}\n      <Button onClick={addAddress}>Add a Address</Button>\n      <Table\n        columns={columns}\n        // rowSelection={{ ...rowSelection, checkStrictly }}\n \n        dataSource={dataSource}\n      />\n    </>\n  </div> \n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}