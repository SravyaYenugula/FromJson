{"ast":null,"code":"var _jsxFileName = \"/home/sravya/Task/sample/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Form, Input, Select, Modal, Table, Button, Tag } from 'antd';\nimport { EditOutlined, DeleteOutlined, SearchOutlined } from '@ant-design/icons';\nimport { Row, Col, DatePicker, Space } from 'antd';\nimport { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  TextArea\n} = Input;\n\nconst App = () => {\n  _s();\n\n  const names = ['sravya', 'ram', 'ramya', 'naresh', 'krishna', 'ganesh', 'vamshi'];\n  const status = ['low', 'medium', 'high'];\n  const [form] = Form.useForm();\n  const [isEditing, setIsEditing] = useState(false);\n  const [editingStudent, setEditingStudent] = useState(null);\n  const [editRow, setEditRow] = useState(null); //  const [searchInput, setSearchInput] = useState('')\n\n  const data = [{\n    key: '1',\n    taskName: 'sales order',\n    dueDate: \"2022-02-24\",\n    assigned: 'sravya',\n    status: \"high\",\n    description: \"good\"\n  } // {\n  //   key: '2',\n  //   taskName: 'Stock Allocation',\n  //   dueDate:\"2022-02-24\" ,\n  //   assigned: 'ravi',\n  //   status: \"high\",\n  //   description:\"very good\"\n  // }\n  ];\n  const [dataSource, setDataSource] = useState(data);\n  const [newData, setNewData] = useState(data);\n  const [newSearch, setNewSearch] = useState(data);\n  const [nameData, setnameData] = useState(\"\");\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [isModalVisibleCheck, setIsModalVisibleCheck] = useState(false);\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  const hasSelected = selectedRowKeys.length > 0;\n  console.log(hasSelected);\n  const [onCheckBoxData, setOnCheckBoxData] = useState('');\n  const [newDataTo, setnewDataTo] = useState([]);\n\n  const onChange = (date, dateString) => {\n    const mydate = moment().format('YYYY-MM-d');\n    console.log(mydate);\n    console.log(date, dateString);\n  };\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleFinish = value => {\n    console.log(value.dueDate); //form.submit()\n\n    const obj = {\n      key: `${data.length + 1}`,\n      taskName: `${value.TaskName}`,\n      dueDate: `${moment(value.dueDate).format('YYYY-MM-d')}`,\n      assigned: `${value.AssignedTo}`,\n      status: `${value.status}`,\n      description: `${value.Description}`\n    }; //console.log(obj)\n\n    const updateData = [...newData];\n    updateData.push(obj);\n    setNewData(updateData);\n  };\n\n  const handleOk = () => {\n    // console.log(form)\n    // const formdata=form.getFieldValue(true)\n    // console.log(formdata)\n    setIsModalVisible(false);\n    form.submit();\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const onDeletrecord = record => {\n    Modal.confirm({\n      title: \"Are are u sure want delete student record?\",\n      okText: \"Yes\",\n      okType: \"danger\",\n      onOk: () => {\n        setNewData(pre => {\n          return pre.filter(student => student.id !== record.id);\n        }); //console.log(\"click\",records)\n      }\n    });\n  };\n\n  const onEditStudent = records => {\n    setIsEditing(true);\n    setEditingStudent({ ...records\n    });\n  };\n\n  const restStudentDetails = () => {\n    setIsEditing(false);\n    setEditingStudent(null);\n  };\n\n  const onTaskname = e => {\n    {\n      setEditingStudent(pre => {\n        console.log(\"hello\", pre);\n        return { ...pre,\n          taskName: e.target.value\n        };\n      });\n    }\n  };\n\n  const columns = [{\n    title: 'Task Name',\n    dataIndex: 'taskName',\n    key: 'task name',\n    render: (text, record) => {\n      if (editRow === record.key) {\n        return /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"taskName\",\n          rules: [{\n            required: true,\n            message: ' task name is reqired'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            style: {\n              width: '200px'\n            } //    onChange={(e)=>{setEditingStudent(pre=>{\n            //    return {...pre,taskName:e.target.value}\n            //  })}}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 18\n        }, this);\n      }\n    },\n    filters: [{\n      text: 'sales order',\n      value: 'sales order'\n    }],\n    onFilter: (value, record) => {\n      return record.taskName === value;\n    }\n  }, {\n    title: 'Due Date',\n    dataIndex: 'dueDate',\n    key: 'due date'\n  }, {\n    title: 'Assigned To',\n    dataIndex: 'assigned',\n    key: 'assigned to',\n    filters: [{\n      text: 'sravya',\n      value: 'sravya'\n    }],\n    onFilter: (value, record) => {\n      return record.assigned === value;\n    }\n  }, {\n    title: 'status',\n    dataIndex: 'status',\n    key: 'status',\n    filters: [{\n      text: 'high',\n      value: 'high'\n    }],\n    onFilter: (value, record) => {\n      return record.status === value;\n    }\n  }, {\n    title: 'Description',\n    dataIndex: 'description',\n    key: 'description'\n  }, {\n    title: 'Action',\n    key: 'action',\n    render: record => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(EditOutlined, {\n          onClick: () => onEditStudent(record)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n          onClick: () => onDeletrecord(record),\n          style: {\n            color: 'red',\n            marginLeft: 12\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true);\n    }\n  }];\n  /*const onFinish = (values) => {\n    console.log('Finish:', values);\n  };*/\n  //  const onChangeSearchInput=(event)=>{\n  //      const searchInput=event.target.value\n  //      console.log(\"==============\",searchInput)\n  //   //  console.log('click')\n  //   //  {data.map(eachTable=>eachTable. taskName)}\n  //   const result=newData.filter((eachValue)=>\n  //  {\n  //   //  console.log(eachValue.Object.keys(eachValue)[1])\n  //   //  console.log(Object.keys(eachValue).length)\n  //   //   for(let i=1;i<Object.keys(eachValue).length;i++){   \n  //   //     console.log( eachValue[`${Object.keys(eachValue)[i]}`] )\n  //   //     return  eachValue[`${Object.keys(eachValue)[i]}`].toLowerCase().includes(searchInput.toLowerCase())\n  //   //     }\n  //          if(searchInput===\"\"){\n  //          console.log(\"------\",newSearch)\n  //          setNewData(newSearch)\n  //            return eachValue\n  //          }else if(eachValue.taskName.toLowerCase().includes(searchInput.toLowerCase()) ||\n  //          eachValue.assigned.toLowerCase().includes(searchInput.toLowerCase()) ||\n  //          eachValue.status.toLowerCase().includes(searchInput.toLowerCase()) ||\n  //          eachValue.description.toLowerCase().includes(searchInput.toLowerCase())){\n  //            return eachValue\n  //          }\n  //      }\n  //     )\n  //    console.log(result)\n  //    setNewData(result)\n  //  }\n\n  const showModelCheck = () => {\n    setIsModalVisibleCheck(true);\n  };\n\n  const onCheckBox = () => {\n    setIsModalVisibleCheck(false);\n  };\n\n  const onCheckCancle = () => {\n    setIsModalVisibleCheck(false);\n  };\n\n  const onFinishEditRow = values => {\n    console.log(\"editroe\", values);\n    const updateDataEditRow = [...dataSource];\n    updateDataEditRow.splice(editRow, 1, { ...values,\n      key: editRow\n    });\n    setDataSource(updateDataEditRow);\n    console.log(\"ywo\", updateDataEditRow);\n    setEditRow(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              fontWeight: \"700\",\n              fontSize: \"16px\",\n              color: \"rgb(0 0 0 / 65%)\",\n              marginBottom: \"0px\",\n              marginTop: \"1%\"\n            },\n            children: \"New Task Work\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '6px',\n              marginBottom: '6px'\n            },\n            style: {\n              padding: '10px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              size: \"small\",\n              placeholder: \"search\",\n              suffix: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 60\n              }, this),\n              placeholder: \"Search\" // value={value}\n              ,\n              onChange: e => {\n                const searchInput = e.target.value; // let currValue = e.target.value;\n                // setValue(currValue);\n\n                setNewData(searchInput);\n                const filteredData = newSearch.filter(entry => entry.taskName !== null && entry.taskName.toLowerCase().includes(searchInput.toLowerCase())); // setLineRolesData(filteredData);\n\n                setNewData(filteredData);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              float: \"right\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              onClick: showModal,\n              style: {\n                marginBottom: \"8px\",\n                marginTop: \"10px\",\n                marginRight: \"10px\",\n                backgroundColor: \"rgb(8 158 164)\",\n                color: \"white\",\n                width: \"93px\",\n                height: \"33px\"\n              },\n              children: \"New Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [hasSelected === true ? /*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                onClick: showModelCheck,\n                children: \"Reload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 44\n              }, this) : \"\", /*#__PURE__*/_jsxDEV(Modal, {\n                width: \"70%\",\n                visible: isModalVisibleCheck,\n                onOk: onCheckBox,\n                onCancel: onCheckCancle,\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  gutter: [16, 16],\n                  children: /*#__PURE__*/_jsxDEV(Table, {\n                    dataSource: newDataTo,\n                    columns: columns\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 332,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Modal, {\n          centered: true,\n          width: \"50%\",\n          title: \"Task Sravya\",\n          visible: isModalVisible,\n          onOk: handleOk,\n          onCancel: handleCancel,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            gutter: [16, 16],\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              className: \"gutter-row\",\n              span: 12,\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                layout: \"vertical\",\n                width: \"70%\",\n                form: form,\n                onFinish: handleFinish,\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  className: \"gutter-row\",\n                  span: 12,\n                  children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                    name: \"TaskName\",\n                    label: \"Task Name\",\n                    style: {\n                      marginBottom: \"8px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Input, {\n                      width: \"50%\",\n                      placeholder: \"task name\",\n                      rules: [{\n                        required: true,\n                        message: 'Please input your username!'\n                      }]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 357,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"gutter-row\",\n                  span: 12,\n                  children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                    name: \"dueDate\",\n                    label: \"Due Date\",\n                    style: {\n                      marginBottom: \"8px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Space, {\n                      direction: \"vertical\",\n                      size: 12,\n                      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                        onChange: onChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 365,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 364,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"gutter-row\",\n                  span: 12,\n                  children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                    name: \"AssignedTo\",\n                    label: \"Assigned To\",\n                    style: {\n                      marginBottom: \"8px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Select, {\n                      allowClear: true,\n                      style: {\n                        width: '90%'\n                      },\n                      children: names.map((list, index) => {\n                        return /*#__PURE__*/_jsxDEV(Select.Option, {\n                          value: list,\n                          children: list\n                        }, index, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 376,\n                          columnNumber: 34\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 373,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"gutter-row\",\n                  span: 12,\n                  children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                    name: \"status\",\n                    label: \"status\",\n                    style: {\n                      marginBottom: \"8px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Select, {\n                      allowClear: true,\n                      style: {\n                        width: '90%'\n                      },\n                      children: status.map((lists, index) => {\n                        return /*#__PURE__*/_jsxDEV(Select.Option, {\n                          value: lists,\n                          children: lists\n                        }, index, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 394,\n                          columnNumber: 34\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 390,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"gutter-row\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                    name: \"Description\",\n                    label: \"Description\",\n                    style: {\n                      marginBottom: \"8px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(TextArea, {\n                      rows: 4,\n                      style: {\n                        height: 90,\n                        width: 820\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 407,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 406,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        form: form,\n        onFinish: onFinishEditRow,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          rowSelection: {\n            type: \"checkbox\",\n            selectedRowKeys: selectedRowKeys,\n            onChange: key => {\n              setSelectedRowKeys(key);\n            },\n            onSelect: record => {\n              setnewDataTo([...newDataTo, record]);\n              console.log({\n                record\n              });\n              console.log(\"######\", record);\n            }\n          },\n          dataSource: newData,\n          columns: columns\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        title: \"Edit student\",\n        visible: isEditing,\n        okText: \"save\",\n        onCancel: () => restStudentDetails(),\n        onOk: () => {\n          setNewData(pre => {\n            return pre.map(student => {\n              if (student.id === editingStudent.id) {\n                return editingStudent;\n              } else {\n                return student;\n              }\n            });\n          });\n          restStudentDetails();\n        },\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          value: editingStudent === null || editingStudent === void 0 ? void 0 : editingStudent.taskName,\n          onChange: e => {\n            setEditingStudent(pre => {\n              return { ...pre,\n                taskName: e.target.value\n              };\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: editingStudent === null || editingStudent === void 0 ? void 0 : editingStudent.dueDate,\n          onChange: e => {\n            setEditingStudent(pre => {\n              return { ...pre,\n                dueDate: e.target.value\n              };\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: editingStudent === null || editingStudent === void 0 ? void 0 : editingStudent.assigned,\n          onChange: e => {\n            setEditingStudent(pre => {\n              return { ...pre,\n                assigned: e.target.value\n              };\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: editingStudent === null || editingStudent === void 0 ? void 0 : editingStudent.status,\n          onChange: e => {\n            setEditingStudent(pre => {\n              return { ...pre,\n                status: e.target.value\n              };\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: editingStudent === null || editingStudent === void 0 ? void 0 : editingStudent.description,\n          onChange: e => {\n            setEditingStudent(pre => {\n              return { ...pre,\n                description: e.target.value\n              };\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"bPdP4kxwbOaz7LI5LxQbPXsUlgM=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/sravya/Task/sample/src/App.js"],"names":["Form","Input","Select","Modal","Table","Button","Tag","EditOutlined","DeleteOutlined","SearchOutlined","Row","Col","DatePicker","Space","useEffect","useState","moment","TextArea","App","names","status","form","useForm","isEditing","setIsEditing","editingStudent","setEditingStudent","editRow","setEditRow","data","key","taskName","dueDate","assigned","description","dataSource","setDataSource","newData","setNewData","newSearch","setNewSearch","nameData","setnameData","isModalVisible","setIsModalVisible","isModalVisibleCheck","setIsModalVisibleCheck","selectedRowKeys","setSelectedRowKeys","hasSelected","length","console","log","onCheckBoxData","setOnCheckBoxData","newDataTo","setnewDataTo","onChange","date","dateString","mydate","format","showModal","handleFinish","value","obj","TaskName","AssignedTo","Description","updateData","push","handleOk","submit","handleCancel","onDeletrecord","record","confirm","title","okText","okType","onOk","pre","filter","student","id","onEditStudent","records","restStudentDetails","onTaskname","e","target","columns","dataIndex","render","text","required","message","width","filters","onFilter","color","marginLeft","showModelCheck","onCheckBox","onCheckCancle","onFinishEditRow","values","updateDataEditRow","splice","fontWeight","fontSize","marginBottom","marginTop","padding","searchInput","filteredData","entry","toLowerCase","includes","float","marginRight","backgroundColor","height","map","list","index","lists","type","onSelect"],"mappings":"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","sourcesContent":["import { Form, Input,Select,Modal,Table,Button, Tag } from 'antd';\nimport{EditOutlined,DeleteOutlined,SearchOutlined }from '@ant-design/icons';\nimport { Row, Col,DatePicker, Space } from 'antd';\nimport { useEffect, useState } from 'react';\nimport moment from 'moment'\n\nimport './App.css';\nimport 'antd/dist/antd.css';\n\nconst { TextArea } = Input;\n\n\nconst App=()=> {\n  const  names=['sravya','ram','ramya','naresh','krishna','ganesh','vamshi']\n  const status=['low','medium','high']\n  const [form] =Form.useForm();\n\n  const [isEditing, setIsEditing] = useState(false)\n  const [editingStudent,setEditingStudent]= useState(null)\n  const [editRow, setEditRow] = useState(null)\n      //  const [searchInput, setSearchInput] = useState('')\n\n      \n   const data=[\n    {\n      key: '1',\n      taskName: 'sales order',\n      dueDate:\"2022-02-24\" ,\n      assigned: 'sravya',\n      status: \"high\",\n      description:\"good\"\n    },\n    // {\n    //   key: '2',\n    //   taskName: 'Stock Allocation',\n    //   dueDate:\"2022-02-24\" ,\n    //   assigned: 'ravi',\n    //   status: \"high\",\n    //   description:\"very good\"\n    // }\n    \n   ]\n   const [dataSource, setDataSource] = useState(data)\n   const [newData,setNewData]=useState(data)\n   const [newSearch,setNewSearch]=useState(data)\n   const [nameData,setnameData]=useState(\"\")\n   const [isModalVisible, setIsModalVisible] = useState(false);\n   const [isModalVisibleCheck, setIsModalVisibleCheck] = useState(false)\n   const [selectedRowKeys,setSelectedRowKeys ] =useState([])\n   const hasSelected = selectedRowKeys.length > 0;\n   console.log(hasSelected)\n   const [onCheckBoxData,setOnCheckBoxData]=useState('')\n   const [newDataTo,setnewDataTo]=useState([])\n\n   const onChange=(date, dateString)=> {\n   const mydate=moment().format('YYYY-MM-d'); \n    console.log(mydate)\n    \n    console.log(date,dateString);\n  \n  }\n\n   const showModal = () => {\n    setIsModalVisible(true);\n  };\n  \n const handleFinish=(value)=>{\n     console.log(value.dueDate)\n     //form.submit()\n     const obj={\n     key:`${data.length + 1}`,\n      taskName: `${value.TaskName}`,\n      dueDate:`${moment(value.dueDate).format('YYYY-MM-d')}`,\n      assigned:`${value.AssignedTo}`,\n      status: `${value.status}`,\n      description:`${value.Description}`,\n    }\n    //console.log(obj)\n    const updateData=[...newData]\n    updateData.push(obj)\n    setNewData(updateData)  \n\n  }\n\n  const handleOk = () => { \n  \n    // console.log(form)\n    // const formdata=form.getFieldValue(true)\n    // console.log(formdata)\n    setIsModalVisible(false);\n     form.submit()\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const onDeletrecord=(record)=>{\n\n    Modal.confirm({\n     \n      title:\"Are are u sure want delete student record?\",\n      okText:\"Yes\",\n       okType:\"danger\",\n       onOk :()=>{\n        setNewData(pre=>{\n         \n          return pre.filter((student)=>student.id !==record.id);\n          \n        });\n        //console.log(\"click\",records)\n       }\n  })\n  \n  };\n  const onEditStudent=(records)=>{\n    setIsEditing(true)\n    setEditingStudent({...records})\n    \n  }\n  const restStudentDetails=()=>{\n    setIsEditing(false) \n    setEditingStudent(null)\n  }\n \nconst onTaskname=(e)=>{\n  {setEditingStudent(pre=>{console.log(\"hello\",pre)\n      return {...pre,taskName:e.target.value}\n    })}\n \n \n  \n}\n\n\n const columns = [\n  {\n    title: 'Task Name',\n    dataIndex: 'taskName',\n    key: 'task name',\n  \n    render:(text,record)=>{\n      if(editRow===record.key){\n\n        return( <Form.Item\n        name=\"taskName\"\n        rules={[{\n              required:true,\n              message:' task name is reqired',\n            }]}>\n   \n           <Input  \n             \n           style={{width:'200px'}} \n          //    onChange={(e)=>{setEditingStudent(pre=>{\n          //    return {...pre,taskName:e.target.value}\n          //  })}}\n             \n           />\n           </Form.Item>)\n        }else{\n          return <p>{text}</p>\n        } \n    } ,  \n\n    filters: [\n      {\n        text: 'sales order',\n        value: 'sales order',\n      },\n    ],\n    onFilter:(value,record)=>{\n      return record.taskName===value\n    }\n  },\n  {\n    title: 'Due Date',\n    dataIndex: 'dueDate',\n    key: 'due date',\n  },\n  {\n    title: 'Assigned To',\n    dataIndex: 'assigned',\n    key: 'assigned to',\n    filters: [\n      {\n        text: 'sravya',\n        value: 'sravya',\n      },\n    ],\n    onFilter:(value,record)=>{\n      return record.assigned===value\n    }\n  },\n {\n  title: 'status',\n  dataIndex: 'status',\n  key: 'status',\n      filters: [\n        {\n          text: 'high',\n          value: 'high',\n        },\n      ],\n      onFilter:(value,record)=>{\n        return record.status===value\n      }\n    \n\n},\n{\n  title: 'Description',\n  dataIndex: 'description',\n  key: 'description',\n},\n{\n  title: 'Action',\n  key: 'action',\n  render:(record)=>{\n    return(\n      <>\n      <EditOutlined  onClick={()=>onEditStudent(record)}/>\n     \n       <DeleteOutlined  onClick={()=>onDeletrecord(record)} style={{color:'red' ,marginLeft:12}} \n        /> \n     \n      </>\n    )\n  }\n},\n\n];\n\n\n\n/*const onFinish = (values) => {\n  console.log('Finish:', values);\n};*/ \n\n\n//  const onChangeSearchInput=(event)=>{\n//      const searchInput=event.target.value\n//      console.log(\"==============\",searchInput)\n//   //  console.log('click')\n//   //  {data.map(eachTable=>eachTable. taskName)}\n\n\n//   const result=newData.filter((eachValue)=>\n//  {\n//   //  console.log(eachValue.Object.keys(eachValue)[1])\n//   //  console.log(Object.keys(eachValue).length)\n//   //   for(let i=1;i<Object.keys(eachValue).length;i++){   \n//   //     console.log( eachValue[`${Object.keys(eachValue)[i]}`] )\n//   //     return  eachValue[`${Object.keys(eachValue)[i]}`].toLowerCase().includes(searchInput.toLowerCase())\n//   //     }\n//          if(searchInput===\"\"){\n//          console.log(\"------\",newSearch)\n//          setNewData(newSearch)\n//            return eachValue\n//          }else if(eachValue.taskName.toLowerCase().includes(searchInput.toLowerCase()) ||\n//          eachValue.assigned.toLowerCase().includes(searchInput.toLowerCase()) ||\n//          eachValue.status.toLowerCase().includes(searchInput.toLowerCase()) ||\n//          eachValue.description.toLowerCase().includes(searchInput.toLowerCase())){\n//            return eachValue\n//          }\n         \n//      }\n//     )\n//    console.log(result)\n//    setNewData(result)\n   \n//  }\n const showModelCheck=()=>{\n  setIsModalVisibleCheck(true)\n}\nconst onCheckBox=()=>{\n    setIsModalVisibleCheck(false)\n}\nconst onCheckCancle=()=>{\n   setIsModalVisibleCheck(false)\n}\n\nconst onFinishEditRow=(values)=>{\n  console.log(\"editroe\",values)\n const updateDataEditRow=[...dataSource]\n updateDataEditRow.splice(editRow,1 ,{...values, key:editRow})\n setDataSource(updateDataEditRow)\n console.log(\"ywo\",updateDataEditRow)\n setEditRow(null)\n}\n\n  return (\n    <div className=\"App\">  \n    <div>\n    <Row> \n    <Col span={12}>\n         <h2 style={{ fontWeight: \"700\", fontSize: \"16px\", color: \"rgb(0 0 0 / 65%)\", marginBottom: \"0px\", marginTop: \"1%\" }}>New Task Work</h2>\n        <div style={{marginTop:'6px',marginBottom:'6px'}} style={{padding:'10px'}}>\n        <Input  size=\"small\"  placeholder=\"search\" suffix={<SearchOutlined />}\n        \n                     placeholder=\"Search\"\n                        // value={value}\n                        onChange={e => {\n                          const searchInput=e.target.value\n                          // let currValue = e.target.value;\n                          // setValue(currValue);\n                          setNewData(searchInput)\n  \n                          const filteredData =  newSearch.filter(entry =>\n                            entry.taskName !== null && entry.taskName.toLowerCase().includes(searchInput.toLowerCase())\n                          );\n                          // setLineRolesData(filteredData);\n                          setNewData(filteredData)\n                        }}>\n           \n        </Input> \n\n        </div>\n       \n     </Col>\n     <Col span={12}>  \n            <span style={{ float: \"right\" }}>  \n                  <Button type=\"primary\" onClick={showModal} style={{marginBottom: \"8px\", marginTop:\"10px\",marginRight:\"10px\",backgroundColor: \"rgb(8 158 164)\", color: \"white\", width: \"93px\", height: \"33px\"}}>New Task</Button>\n                    <div >\n                      {hasSelected===true ?<Button type=\"primary\" onClick={showModelCheck}\n                    >\n                        Reload\n                      </Button>:\"\"}\n                      <Modal width=\"70%\"  visible={isModalVisibleCheck}  onOk={onCheckBox} onCancel={onCheckCancle}>\n                      <Row gutter={[16, 16]} > \n                       \n                            <Table\n                  \n                            dataSource={newDataTo} \n                            columns={columns} >\n                              \n                            </Table>\n                      \n                      </Row>     \n                      </Modal>\n                      \n                  </div>\n            </span>  \n      </Col>\n      </Row>   \n      <Row> \n         <Modal   centered\n          width=\"50%\" title=\"Task Sravya\" visible={isModalVisible} onOk={handleOk} \n          onCancel={handleCancel} \n          >\n            <Row gutter={[16, 16]}> \n            <Col className=\"gutter-row\" span={12}>\n                <Form layout=\"vertical\"  width='70%' form={form}  onFinish={handleFinish} >  \n           \n                  <Col className=\"gutter-row\" span={12}> \n                      <Form.Item name=\"TaskName\" label=\"Task Name\" style={{ marginBottom: \"8px\" }}> \n                          <Input  width=\"50%\" placeholder=\"task name\" \n                          rules={[{ required: true, message: 'Please input your username!' }]}/>\n                      </Form.Item>\n                   </Col> \n\n                  <Col className=\"gutter-row\" span={12}>\n                      <Form.Item name=\"dueDate\" label=\"Due Date\" style={{ marginBottom: \"8px\" }}> \n                        <Space direction=\"vertical\" size={12}>   \n                            <DatePicker  onChange={onChange}/>\n                        </Space>\n                      </Form.Item>\n                \n                  </Col>\n                    \n                  <Col className=\"gutter-row\" span={12}>\n                      <Form.Item name=\"AssignedTo\" label=\"Assigned To\" style={{ marginBottom: \"8px\" }}>\n                      <Select\n                        allowClear style={{width:'90%' }}>\n                        {names.map((list,index)=>{\n                          return <Select.Option key={index} \n                        value={list}>{list}\n                      </Select.Option>\n\n                  })} \n                  \n                  </Select> \n                    </Form.Item>\n                \n                  </Col>\n\n                  <Col className=\"gutter-row\" span={12}>\n                  \n                    <Form.Item name=\"status\" label=\"status\" style={{ marginBottom: \"8px\" }}>\n                        <Select\n                        \n                          allowClear style={{width:'90%' }}>\n                        {status.map((lists,index)=>{\n                          return <Select.Option key={index} \n                            value={lists}>{lists}\n                            </Select.Option>\n\n                        })} \n                        \n                        </Select> \n                        </Form.Item>\n                \n                  </Col>\n                  <Col className=\"gutter-row\" > \n                \n                      <Form.Item name=\"Description\" label=\"Description\" style={{ marginBottom: \"8px\" }}>\n                      <TextArea rows={4} style={{ height: 90 ,width:820}} />\n                    </Form.Item>\n                \n                  </Col>\n                </Form>\n             </Col> \n            </Row>\n           </Modal>\n      </Row>\n      \n        \n   </div>\n    <div style={{padding:'10px'}}>\n    <Form form={form} onFinish={onFinishEditRow}> \n       <Table\n       rowSelection={{\n         type:\"checkbox\",\n         selectedRowKeys:selectedRowKeys,\n         onChange:(key)=>{\n            setSelectedRowKeys(key)\n          \n         },\n\n         onSelect:(record)=>{\n           setnewDataTo([...newDataTo,record])\n              console.log({record})\n       \n              console.log(\"######\",record)\n         }\n\n       }}\n        dataSource={newData} \n        columns={columns} >\n          \n       </Table>\n       </Form>\n       <Modal title=\"Edit student\" visible={isEditing} \n           okText=\"save\"\n           onCancel={()=>restStudentDetails()}\n \n            onOk={()=>{ setNewData(pre=>{\n              return pre.map(student=>{\n                if (student.id===editingStudent.id) {\n                  return  editingStudent\n                }else{\n                  return student\n                }\n\n              })\n            })\n             restStudentDetails()}}\n           >\n           <Input value={editingStudent?.taskName} onChange={(e)=>{setEditingStudent(pre=>{\n             return {...pre,taskName:e.target.value}\n           })}}/>\n           <Input value={editingStudent?.dueDate} onChange={(e)=>{setEditingStudent(pre=>{\n             return {...pre,dueDate:e.target.value}\n           })}}/>\n           <Input value={editingStudent?.assigned} onChange={(e)=>{setEditingStudent(pre=>{\n             return {...pre,assigned:e.target.value}\n           })}}/>\n             <Input value={editingStudent?.status} onChange={(e)=>{setEditingStudent(pre=>{\n             return {...pre,status:e.target.value}\n           })}}/>\n             <Input value={editingStudent?. description} onChange={(e)=>{setEditingStudent(pre=>{\n             return {...pre,description:e.target.value}\n           })}}/>\n\n           </Modal>\n    </div>\n  </div>\n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}